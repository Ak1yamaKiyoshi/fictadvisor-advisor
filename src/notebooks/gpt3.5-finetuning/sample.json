{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "how do i do PersonalTeacherPage using React, Next, MUI for my website? Assume that i alrready have all needed components"}, {"role": "assistant", "content": "createContext, Dispatch, FC, SetStateAction, useEffect, useState,} from 'react'; PersonalTeacherPageProps, TeachersPageTabs,} from '@/components/pages/personal-teacher-page/utils';// TODO: move context to separate folder, move types to separate folderexport interface TeacherContext { floatingCardShowed: boolean; setFloatingCardShowed: Dispatch<SetStateAction<boolean>>; teacher: Teacher;}export const teacherContext = createContext<TeacherContext>({ floatingCardShowed: false, setFloatingCardShowed: () => {}, teacher: {} as Teacher,});const PersonalTeacherPage: FC<PersonalTeacherPageProps> = ({ isLoading, isError, data, teacher, query, teacherId,}) => { const router = useRouter(); const { push } = router; const toast = useToast(); const [floatingCardShowed, setFloatingCardShowed] = useState(false); const { tab } = query; const [index, setIndex] = useState<TeachersPageTabs>( TeachersPageTabs.GENERAL, ); const handleChange = useTabState({ tab, router, setIndex }); useEffect(() => { if (isError) { toast.error('\u041a\u0443\u0434\u0438 \u0442\u0438 \u043b\u0456\u0437\u0435\u0448, \u0446\u0456\u0454\u0457 \u043b\u044e\u0434\u0438\u043d\u0438 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454'); void push('/teachers'); } }, [isError, push]); if (!data) return null; return ( <teacherContext.Provider value={{ floatingCardShowed, setFloatingCardShowed, teacher, }} > <div className={styles['personal-teacher-page']}> {isLoading ? ( <div className={styles['personal-teacher-page-content']}> <div className={styles['loader']}> <Progress /> </div> </div> ) : ( !isError && ( <div className={styles['personal-teacher-page-content']}> <Breadcrumbs sx={{ margin: '16px 0px 16px 0px' }} //TODO move inline styles when refactor items={[ { label: '\u0413\u043e\u043b\u043e\u0432\u043d\u0430', href: '/', }, { label: '\u0412\u0438\u043a\u043b\u0430\u0434\u0430\u0447\u0456', href: '/teachers' }, { label: `${teacher.lastName} ${teacher.firstName} ${teacher.middleName}`, href: `/teachers/${teacherId}`, }, ]} /> <div className={styles['card-wrapper']}> <PersonalTeacherCard {...teacher} /> </div> <div className={styles['tabs']}> <PersonalTeacherTabs data={data} tabIndex={index} handleChange={handleChange} teacher={teacher} /> </div> </div> ) )} </div> </teacherContext.Provider> );};export default PersonalTeacherPage;"}]}